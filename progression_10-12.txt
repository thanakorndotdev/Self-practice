Progression การเรียนรู้ประจำสัปดาห์ (วันที่ 10–12 ตุลาคม 2025)

ตลอดสัปดาห์นี้ ผมได้เรียนรู้และฝึกฝนเกี่ยวกับการทำงานของ Document Object Model (DOM) และการประยุกต์ใช้งานจริงผ่านโปรเจกต์ Music List และ Quote Manager ซึ่งช่วยให้เข้าใจความสัมพันธ์ระหว่างข้อมูล
(Data) และการแสดงผล (UI) ได้อย่างเป็นระบบมากขึ้น

เริ่มจากวันที่ 10 ตุลาคม ผมได้เรียนรู้พื้นฐานของ DOM ว่าเป็นโครงสร้างแบบต้นไม้ที่ใช้แทนเอกสาร HTML โดยทุกองค์ประกอบในหน้าเว็บ เช่น <div>, <p> หรือแม้แต่ข้อความ ล้วนเป็น Node ทั้งสิ้น 
ผมเข้าใจว่าหน้าเว็บทั้งหมดเริ่มจาก document ซึ่งเป็น root node ที่แยกออกเป็น html, head และ body จากนั้นได้ศึกษาเรื่อง Node Type ซึ่งบ่งบอกชนิดของแต่ละ Node เช่น ELEMENT_NODE, 
ATTRIBUTE_NODE, TEXT_NODE, COMMENT_NODE, DOCUMENT_NODE และ DOCUMENT_TYPE_NODE การรู้จักชนิดเหล่านี้ช่วยให้ผมสามารถวิเคราะห์โครงสร้างของหน้าเว็บได้ลึกขึ้น

ผมได้ทดลองใช้คำสั่งสำคัญ เช่น getElementById() เพื่อเข้าถึง element เฉพาะตัว, childNodes เพื่อดู node ลูกทั้งหมด รวมถึง nodeName, nodeType, และ nodeValue เพื่อแยกแยะชนิดของ
node ต่าง ๆ ได้อย่างถูกต้อง นอกจากนี้ยังฝึกใช้ getAttribute() เพื่อเข้าถึงค่า attribute ของ element และเข้าใจว่า attribute แม้จะไม่อยู่ใน DOM tree โดยตรงแต่ก็สามารถเข้าถึงและจัดการได้เช่นกัน
จากนั้นเปรียบเทียบคำสั่ง innerHTML, innerText, และ textContent เพื่อเข้าใจความแตกต่างของการดึงข้อมูลภายใน element และรู้ว่าควรใช้แบบไหนในแต่ละสถานการณ์

ต่อมาในวันที่ 11 ตุลาคม ผมได้ลงมือฝึกปฏิบัติในโปรเจกต์ Music List Project เริ่มจากการใช้ document.addEventListener("DOMContentLoaded", …) เพื่อให้โค้ดรันหลังจากหน้าเว็บโหลดเสร็จ 
และทดลองเปลี่ยนสีพื้นหลังของหน้าเว็บด้วย document.body.style.backgroundColor จากนั้นใช้ prompt() รับค่าจากผู้ใช้มาแสดงผลบนหน้าเว็บผ่าน querySelector() และ .textContent 
ซึ่งช่วยให้เข้าใจการเชื่อมโยงระหว่างโค้ด JavaScript กับ DOM ได้ชัดเจน

ผมได้ฝึกการเก็บข้อมูลด้วย Array และ Object โดยสร้าง array ของเพลงที่เก็บเป็น object แต่ละรายการ มี key เช่น Name และ Author พร้อมใช้ push() เพิ่มข้อมูลใหม่เข้าไป
ทำให้เข้าใจการเก็บข้อมูลหลายชุดอย่างเป็นระบบ และเริ่มฝึกออกแบบฟังก์ชันให้แยกตามหน้าที่ เช่น addMusic(), getAllMusics(), และ renderMusics() เพื่อให้โค้ดอ่านง่ายและนำกลับมาใช้ซ้ำได้ 
ต่อมาผมได้ฝึกเชื่อมข้อมูลเข้ากับ DOM โดยใช้ createElement() และ appendChild() เพื่อสร้าง element ใหม่ขึ้นแบบไดนามิก และทำให้หน้าเว็บสามารถสร้างรายการเพลงโดยอัตโนมัติ
การรวมทุกแนวคิดเข้าด้วยกันทำให้หน้าเว็บสามารถรับชื่อผู้ใช้ เปลี่ยนสีพื้นหลัง และแสดงรายการเพลงได้อย่างสมบูรณ์ ซึ่งช่วยให้เห็นภาพการทำงานร่วมกันของ Data และ UI อย่างชัดเจน

ในวันที่ 12 ตุลาคม ผมได้นำแนวคิดทั้งหมดมาพัฒนาโปรเจกต์ Quote Manager เพื่อยกระดับทักษะให้ครบทั้งด้าน DOM, Data Layer, และ UX ผมเริ่มจากการฝึกพื้นฐาน DOM และ Events 
โดยสร้างตัวนับจำนวนคำคมแบบเรียลไทม์ เพิ่มป้ายแจ้งเตือน และปุ่ม Clear Form จากนั้นฝึกด้าน Data Layer โดยเพิ่มการตรวจสอบความถูกต้องของข้อมูล เช่น ความยาวของข้อความและชื่อผู้เขียน 
พร้อมเพิ่มฟิลด์วันที่สร้างคำคม

ต่อมาได้ฝึกเรื่อง Persistence โดยบันทึกข้อมูลใน localStorage เพื่อให้ยังคงอยู่หลังรีเฟรช และเพิ่มฟังก์ชัน Export/Import JSON เพื่อจัดการข้อมูลได้ยืดหยุ่นมากขึ้น ผมยังปรับปรุง UX ด้วยระบบค้นหา 
การเรียงลำดับคำคม และกล่องยืนยันก่อนลบ รวมถึงเอฟเฟกต์ไฮไลต์เมื่อแก้ไขสำเร็จ จากนั้นฝึกเรื่องคุณภาพโค้ดโดยเขียน unit test เบื้องต้น และทดสอบกรณีขอบ เช่น ไม่มีข้อมูลหรือข้อความยาวมาก 
เพื่อให้ระบบมีเสถียรภาพมากขึ้น สุดท้ายเสริมเรื่อง Accessibility โดยใช้ aria-live และ aria-label รวมถึงการควบคุมด้วยคีย์บอร์ด

ตลอดสัปดาห์นี้ ผมรู้สึกว่าทักษะการเขียน JavaScript และการเข้าใจ DOM ของผมพัฒนาไปมาก จากที่เคยมองว่า DOM เป็นแค่โครงสร้างของเว็บ ตอนนี้ผมเห็นว่ามันคือหัวใจของการเชื่อมต่อระหว่างข้อมูลและผู้ใช้ 
การฝึกฝนอย่างต่อเนื่องในแต่ละขั้นทำให้ผมมั่นใจมากขึ้นในการพัฒนาเว็บแบบไดนามิก และพร้อมต่อยอดไปสู่การสร้างเว็บแอปพลิเคชันที่ซับซ้อนมากขึ้นในอนาคต
10/10/2025
Progression การเรียนรู้: Document Object Model (DOM)
เริ่มต้นจากการทำความเข้าใจโครงสร้างของ DOM ผมได้เรียนรู้ว่า Document Object Model หรือ DOM คือโครงสร้างต้นไม้ที่ใช้แทนหน้าเว็บ HTML 
โดยทุกองค์ประกอบในหน้า เช่น div, p หรือแม้แต่ข้อความภายใน ล้วนเป็น Node ทั้งสิ้น การเข้าใจว่าเอกสาร HTML ถูกแทนด้วย node tree 
ทำให้ผมเริ่มเห็นภาพว่าองค์ประกอบต่าง ๆ ในหน้าเว็บมีความสัมพันธ์กันอย่างเป็นระบบ โดยมี document เป็น root node ที่มีลูกคือ html และต่อด้วย 
head และ body

จากนั้นผมได้ทำความเข้าใจ Node Type ซึ่งเป็นสิ่งที่ใช้บ่งบอกชนิดของ Node แต่ละตัวใน DOM เช่น ELEMENT_NODE มีค่า nodeType เท่ากับ 1 หมายถึงแท็ก 
HTML อย่าง div หรือ p, ATTRIBUTE_NODE มีค่าเท่ากับ 2 หมายถึงแอตทริบิวต์ของแท็ก เช่น id หรือ style, TEXT_NODE มีค่าเท่ากับ 3 
หมายถึงข้อความภายในแท็ก, COMMENT_NODE มีค่าเท่ากับ 8 หมายถึงคอมเมนต์ใน HTML, DOCUMENT_NODE มีค่าเท่ากับ 9 หมายถึงเอกสารทั้งหมด และ
DOCUMENT_TYPE_NODE มีค่าเท่ากับ 10 หมายถึง doctype การรู้จัก nodeType เหล่านี้ทำให้ผมสามารถจำแนกและเข้าใจหน้าที่ของแต่ละ node 
ในหน้าเว็บได้อย่างชัดเจน

ผมได้ทดลองใช้คำสั่ง getElementById() เพื่อเข้าถึง element เฉพาะตัว และใช้ childNodes เพื่อดู node ลูกทั้งหมดภายใน จากนั้นใช้ nodeName, 
nodeType และ nodeValue เพื่อแยกแยะชนิดของ node ต่าง ๆ ได้อย่างถูกต้อง เช่น การแสดงผลว่าภายใน div หนึ่งอันมีทั้งข้อความและแท็ก span ผสมกัน 
การทดลองเหล่านี้ทำให้เห็นว่า HTML ที่ดูเหมือนเรียบง่ายจริง ๆ แล้วประกอบด้วยหลาย node ที่ซ้อนอยู่ภายใน

ต่อมาผมได้เรียนรู้การเข้าถึง Attribute Node โดยใช้ element.attributes หรือ getAttribute() เพื่อดูค่าของ id หรือ style 
และได้เข้าใจว่าผมสมบัติสำคัญของ Attribute Node ได้แก่ nodeType เท่ากับ 2 และ ownerElement ที่ชี้กลับไปยัง element ต้นทาง ทำให้เห็นว่า 
Attribute แม้จะไม่อยู่ใน DOM tree โดยตรง แต่ก็สามารถเข้าถึงและจัดการได้เหมือน node อื่น ๆ

จากนั้นผมได้ทดลองใช้คำสั่ง innerHTML, innerText และ textContent เพื่อเปรียบเทียบความแตกต่างของการดึงข้อมูลข้อความภายใน element โดย
innerHTML จะคืนค่า HTML ทั้งหมดรวมแท็กที่ซ้อนอยู่ innerText จะคืนเฉพาะข้อความที่มองเห็นบนหน้าเว็บ และ textContent จะคืนข้อความทั้งหมดรวมถึงข้อความที่ซ่อนอยู่ 
การทดลองนี้ช่วยให้เข้าใจว่าควรใช้คำสั่งใดให้เหมาะกับสถานการณ์ เช่น หากต้องการดึงข้อความจริงที่ผู้ใช้เห็นควรใช้ innerText แต่ถ้าต้องการโครงสร้าง HTML ทั้งหมดควรใช้ innerHTML